@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

/* reset css */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Define light mode (default) */
:root {
  --toggle-bg-color: white;
  --toggle-text-color: #222;
  --toggle-border-color: #222;
  --toggle-box-shadow: 0 0 5px #222;
}

/* Define dark mode */
.dark-mode {
  --toggle-bg-color: #222;
  --toggle-text-color: white;
  --toggle-border-color: white;
  --toggle-box-shadow: 0 0 5px white;
}

/* setup */
html, body {
  background-color: var(--toggle-bg-color);
  color: var(--toggle-text-color);
  font-family: "Roboto", sans-serif;
  font-size: .95rem;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  cursor: crosshair;
}

/* Dark Mode Toggle Button */
.dark-mode-toggle {
  position: absolute;
  top: 20px;
  left: 20px;
  z-index: 100;
}

/* Hide the actual checkbox */
.checkbox {
  opacity: 0;
  position: absolute;
}

/* Style the switch */
.checkbox-label {
  background-color: #222;
  width: 38px;
  height: 20px;
  border-radius: 50px;
  position: relative;
  padding: 4px;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: var(--toggle-bg-shadow);
}

.checkbox-label .ball {
  background-color: #fff;
  width: 16px;
  height: 16px;
  position: absolute;
  left: 2px;
  top: 2px;
  border-radius: 50%;
  transition: transform 0.2s linear;
}

/* Move the ball to the right when checked */
.checkbox:checked + .checkbox-label .ball {
  transform: translateX(18px);
}

/* Dark mode toggle button */
.dark-mode .checkbox-label {
  background-color: white; /* Light background for dark mode */
}

.dark-mode .checkbox-label .ball {
  background-color: #222; /* Dark ball for contrast */
}

/* Dark mode styles */
.dark-mode {
  background-color: #222; /* Dark background */
  color: white; /* White text */
}

.dark-mode a {
  color: white; /* Make links white */
}

.dark-mode a::before {
  background-color: rgba(255, 255, 255, 0.3); /* Adjust blur effect */
  box-shadow: 0 0 0 30px rgba(255, 255, 255, 0.3);
}


a {
  background-color: transparent;
  color: var(--text-color);
  pointer-events: auto;
  display: inline-block;
  text-align: center;
  text-decoration: none;
  transition: transform 1s ease, letter-spacing 0.3s ease, font-style 0.3s ease;
  z-index: 10;
  padding: 1rem;
  position: absolute;
  top: 0;
  left: 0;
}



a:hover {
  text-decoration: underline;
}

/* canvas */

.canvas-container {
  width: 100%;
  height: 100%;
}

canvas {
  width: 100%;
  height: 100%;
  background-color: transparent;
  background: none;
}

/* Vertical layout mode */
body.vertical-layout main {
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* Aligns links to the right */
  position: absolute;
  right: 20%;
  top: 160px;
}

body.vertical-layout a {
  position: relative; /* Allow proper stacking */
  display: block;
  padding: .5rem;
  width: fit-content;
  transition: none;
  overflow: hidden;
  text-align: left;
}



/* Preview box */
.preview-box {
  width: 40.1vw; /* The fixed preview box size */
  height: 47.5vh;
  position: fixed;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* background: white; */
  overflow: hidden;
  display: none;
  z-index: 9999;
  border: 1px solid black;
}

.preview-box iframe {
  width: 1920px; /* Keep full HD resolution */
  height: 1080px;
  transform: scale(0.4); 
  transform-origin: top left;
  overflow: hidden;
  border: none;
}

#layoutToggle {
  background-color: var(--toggle-text-color);
  color: var(--toggle-bg-color);
  box-shadow: var(--toggle-bg-shadow);
  border: 1px solid var(--toggle-border-color);
  position: absolute;
  top: 20px;
  left: 80px;
  z-index: 100;
  height: 20px;
  width: 62px;
  border-radius: 50px;
  font-size: 12px;
  cursor: pointer;
  font-weight: bold;
  letter-spacing: -.1px;
 
}

.github-arrow {
  display: none;
}
